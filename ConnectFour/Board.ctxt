#BlueJ class context
comment0.params=
comment0.target=Board()
comment0.text=\r\n\ Constructor\ that\ initializes\ a\ Board\ with\ a\ 2-d\ array\ called\ graph\ that\ contains\ all\ 0s\r\n
comment1.params=column\ playerOrComp
comment1.target=void\ place(int,\ int)
comment1.text=\r\n\ This\ method\ will\ be\ called\ to\ represent\ placing\ a\ game\ piece\ down\ one\ of\ the\ columns\r\n\ @param\ column\ The\ column\ to\ place\ the\ game\ piece\ down\r\n\ @param\ playerOrComp\ Chip\ to\ be\ placed.\ 1\ represents\ a\ player\ chip,\ 2\ represents\ a\ computer\ chip\r\n
comment2.params=column
comment2.target=void\ remove(int)
comment2.text=\r\n\ This\ method\ will\ remove\ the\ chip\ at\ the\ uppermost\ position\ of\ a\ certain\ column\r\n\ @param\ column\ The\ column\ the\ remove\ the\ chip\ from\r\n
comment3.params=playerOrComp
comment3.target=boolean\ isWinner(int)
comment3.text=\r\n\ Will\ determine\ if\ the\ player\ has\ won\ or\ will\ determine\ if\ the\ computer\ has\ won\r\n\ depending\ on\ the\ corresponding\ paramter\ n\r\n\ @param\ playerOrComp\ If\ it\ is\ a\ 1,\ it\ is\ checking\ to\ see\ if\ the\ player\ has\ won.\ \r\n\ If\ it\ is\ a\ 2,\ it\ is\ checking\ to\ see\ if\ the\ computer\ won\r\n\ @return\ False\ if\ no\ winner,\ True\ if\ winner\r\n
comment4.params=
comment4.target=Board\ copyBoard()
comment4.text=\r\n\ Copies\ the\ numbers\ from\ the\ graph\ of\ the\ Board\ that\r\n\ called\ the\ method\ into\ the\ graph\ of\ a\ newly\ created\ board\r\n\ @return\ The\ new\ board\ with\ copied\ graph\r\n
comment5.params=
comment5.target=int\ getHeuristic()
comment5.text=\r\n\ Calculates\ the\ heuristic\ value\ for\ a\ specific\ board\ depending\ on\ the\ numbers\ in\ the\ graph.\r\n\ Higher\ heuristic\ values\ mean\ that\ the\ board's\ graph\ is\ good\ for\ the\ computer.\r\n\ Lower\ heuristic\ values\ mean\ that\ the\ board's\ graph\ is\ good\ for\ the\ player.\r\n\ @return\ The\ heuristic\ value\r\n
comment6.params=numInRow\ playerOrComp
comment6.target=int\ checkVerticals(int,\ int)
comment6.text=\r\n\ This\ method\ will\ return\ the\ number\ of\ groups\ of\ chips\ 'in\ a\ row'\ in\ the\ vertical\ columns\r\n\ @param\ numInRow\ Specifies\ the\ number\ of\ chips\ in\ a\ group\ to\ look\ for\r\n\ @param\ playerOrComp\ Specifies\ whether\ to\ look\ for\ player\ chips\ with\ a\ 1\ or\ computer\ chips\ with\ a\ 2\r\n\ @return\ The\ number\ of\ groups\ containing\ the\ specified\ amount\ of\ chips\ 'in\ a\ row'\r\n
comment7.params=numInRow\ playerOrComp
comment7.target=int\ checkHorizontals(int,\ int)
comment7.text=\r\n\ This\ method\ will\ return\ the\ number\ of\ groups\ of\ chips\ 'in\ a\ row'\ in\ the\ horizontal\ rows\r\n\ @param\ numInRow\ Specifies\ the\ number\ of\ chips\ in\ a\ group\ to\ look\ for\r\n\ @param\ playerOrComp\ Specifies\ whether\ to\ look\ for\ player\ chips\ with\ a\ 1\ or\ computer\ chips\ with\ a\ 2\r\n\ @return\ The\ number\ of\ groups\ containing\ the\ specified\ amount\ of\ chips\ 'in\ a\ row'\r\n
comment8.params=numInRow\ playerOrComp
comment8.target=int\ checkDiagonals(int,\ int)
comment8.text=\r\n\ This\ method\ will\ return\ the\ number\ of\ groups\ of\ chips\ 'in\ a\ row'\ in\ the\ diagonals\r\n\ @param\ numInRow\ Specifies\ the\ number\ of\ chips\ in\ a\ group\ to\ look\ for\r\n\ @param\ playerOrComp\ Specifies\ whether\ to\ look\ for\ player\ chips\ with\ a\ 1\ or\ computer\ chips\ with\ a\ 2\r\n\ @return\ The\ number\ of\ groups\ containing\ the\ specified\ amount\ of\ chips\ 'in\ a\ row'\r\n
numComments=9
